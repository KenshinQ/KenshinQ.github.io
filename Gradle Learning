学习Gradle
Gradle是一个新的构建工具，使用Groovy语言来作为构建任务的描述语言。
一、Groovy语言基础
Groovy是在java的基础上扩展出来的脚本语言，完美兼容java的语法，同时它又带来了脚本语言如python、ruby等语言的特性。
Groovy支持动态类型，定义变量的时候不需要指定变量类型。定义变量的关键字是def。
Groovy定义函数时，参数也不需要类型。函数的最后一行代码的结果被作为函数的返回值返回。
Groovy像python中一样支持单引号、双引号和三引号来包围字符串。但是，这三种方式分别有自己的特点，在使用单引号‘’来包围字符串时，不对$符号
进行转义，原样输出；而在使用双引号“”来包围字符串时，会对跟随在$符号后面的表达式进行求值替换；而使用三引号‘“’”包围字符串时，则可以随意
换行。
Groovy引入了一种新的对象类型---闭包。闭包的定义的结构是{params->code body}.如果在定义闭包的时候没有定义参数params，则会有一个默认参数
it。当调用的函数的最后一个参数是闭包的时候，可以省略掉函数调用时包围参数的圆括号。
Groovy可以定义类，而Groovy中不是定义在类中的代码则为脚本代码，而Groovy脚本是最终是会被编译为一个Java类的，脚本中定义的函数为这个脚本类
的方法，同时这个脚本类会生成一个main函数和一个run方法，当直接执行脚本文件的时候，jvm会用这个main函数作为入口，创建脚本类的对象，然后
执行对象的run方法。脚本文件中的脚本代码，如果不是函数定义，则都在run方法中执行。所以会出现脚本中函数直接方法函数外部的脚本定义的变量会
报错，这就是因为上面提到的原理，导致执行函数的时候，是找不到变量定义的。而要为脚本类添加一个属性，使得脚本对象的函数可以随时访问的话，需
要引入Field概念，即通过import groovy.transform.Field后，使用@Field关键字来声明变量，这样这个变量就会在脚本被编译成脚本类的时候，变量成
为脚本类的属性，于是脚本对象的方法可以随时访问这个变量。
二、Gradle介绍及使用
Gradle是一个工具，其本质是一个编程框架，所有的工作是通过各种Gradle api的使用来完成工作。
